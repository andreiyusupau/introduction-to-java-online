package com.nevermind.seaport;

import com.nevermind.seaport.director.Seaport;

/*Задание 4. Многопоточность. Порт . Корабли заходят в порт для
разгрузки/загрузки контейнеров. Число контейнеров, находящихся в текущий момент
в порту и на корабле, должно быть неотрицательным и превышающим заданную
грузоподъемность судна и вместимость порта. В порту работает несколько причалов.
У одного причала может стоять один корабль. Корабль может загружаться у причала
или разгружаться.*/

//скорее всего имелось ввиду "не превышающим"

/* Параллельный доступ в данной задаче реализован с помощью семафоров.
Контейнеры и корабли создаются с помощью фабрик.
Каждый корабль и контейнер имеет пункт отправления и пункт назначения, которые выбираются из заранее заданного списка.
Все корабли поочередно выгружают груз , несоответствующий их пункту назначения и загружают соотвествующий.
При полной загрузке корабль отплывает и причал может принять следующий.
*/

/*Возможная проблема - т.к. единственным источником контейнеров в порту являются приходящие корабли,
* может создаться ситуация, когда все причалы заняты, но корабли не уходят, т.к. в порту нет подходящих по пункту
* назначения контейнеров.
* Это может решаться несколькими способами:
* 1) Малое количество возможных пунктов назначения и большое количество доков
*  (тогда чисто благодаря теории вероятности контейнеры в порту будут обновляться)
* 2) Фабрика контейнеров в порту (например, исчтоником контейнеров могут быть железная дорога или грузовой транспорт)
* 3) Отправка кораблей недозаполненными(т.е. после , например, 5 попыток загрузки корабль отправляется из порта "как есть")*/

public class Main {

    public static void main(String[] args){

        String[] ports = new String[]{"Naples","Marseille"};//список портов
        String[] cargo = new String[]{"Food","Machinery","Medicines","Bikes"};//список грузов (справочно)
Seaport seaport=new Seaport(10,ports,cargo); //создаем порт
    }
}
