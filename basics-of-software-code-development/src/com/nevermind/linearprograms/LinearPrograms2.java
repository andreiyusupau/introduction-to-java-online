package com.nevermind.linearprograms;

//2.Вычислить значение выражения по формуле (все переменные принимают действительные значения): (b + sqrt(b^2+4ac)) / (2a) - a^3 * c + b^(-2)

public class LinearPrograms2 {

    public static void main(String[] args) {
        double a = -1.0;
        double b = 3.0;
        double c = 4.0;
        linearPrograms2(a, b, c);
    }

    /*Так как в задании речь идет о действительных числах, принимаем, что все переменные относятся к типу double.
     При наличии требований к точности вычислений возможно применение другого формата данных.*/

    public static void linearPrograms2(double a, double b, double c) {

        //Возведение в степень производится без применения Math.pow с целью ускорения работы программы

        /*Так как в формуле присутствует операция извлечения корня из выражения, а это выражение может быть
         отрицательным - в таком случае результат извлечения корня будет лежать в области комплексных чисел,
          а общий результат вычисления выражения будет иметь воображаемую часть. Рассмотрим оба варианта.
          Кроме того при значении a или b = 0, из-за деления на 0 результатом вычисления выражения является бесконечность.
           Обозначим выражение b * b + 4 * a * c переменной x.  */

        double x;
        x = b * b + 4 * a * c;

        //Вариант 1. а=0 или b=0. тогда выражение равно бесконечности (положительной).

        if (a == 0 || b == 0) {
            System.out.println("При значениях переменных a=" + a + ", b=" + b + ", c=" + c +
                    " результат вычисления выражения равен положительной бесконечности");
        }

        /*Вариант 2. Значение х - неотрицательное. Тода дальнейшие вычисления ведем непосредственной подставновкой
         значений переменных в формулу.*/

        else if (x >= 0) {
            double result;
            result = (b + Math.sqrt(x)) / (2 * a) - a * a * a * c + 1 / (b * b);
            System.out.println("При значениях переменных a=" + a + ", b=" + b + ", c=" + c + " результат вычисления выражения " + result);
        }

        /*Вариант 3. Значение x- отрицательное. Значит корень из х будет представлять из себя воображаемое число.
        А результат вычсисления всего выражения - комплексное. Выделим реальную часть числа - re, и воображаемую - im.*/

        else {
            double re;
            double im;

            //к действительной части применимы все операции - деление , умножение, суммирование , вычитание.

            re = b / (2 * a) - a * a * a * c + 1 / (b * b);

            //так как остальные числа в выражении имеют только реальную часть, то к воображаемой применимо только деление, умножение.

            im = Math.sqrt(Math.abs(x)) / (2 * a);
            System.out.println("При значениях переменных a=" + a + ", b=" + b + ", c=" + c + " результат вычисления выражения " + re + (im > 0 ? "+" : "") + im + "i.");

            /*В целом работа с комплексными числами тербует более слложной реализации, которая в рамках данной функции не рассмтарвиается.
             Линейной программой назвать это я тоже не могу.*/
        }
    }
}
