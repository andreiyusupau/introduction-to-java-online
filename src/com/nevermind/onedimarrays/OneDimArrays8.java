package com.nevermind.onedimarrays;

import java.util.Arrays;

 /*8. Дана последовательность целых чисел a1, a2... an. Образовать новую последовательность, выбросив из
    исходной те члены, которые равны min(a1, a2... an).*/

public class OneDimArrays8 {

    public static void main(String[] args) {
        //Задаем массив целых чисел
        int[] a = new int[]{-1, 2, 8, -65, 0, 76, -457, 5, 324};

        System.out.println("Исходный массив " + Arrays.toString(a));

        int[] b;
        b = oneDimArrays8(a);

        System.out.println("Новый массив " + Arrays.toString(b));
    }

    private static int[] oneDimArrays8(int[] a) {
        //Инициализируем минимальный элемент
        int min = a[0];

        //Счётчик определяющий количество минимальных элементов в массиве. Устанваливаем 1, предполагая что 0-ой элемент массива минимальный.
        int count = 1;

        //Обходим массив начиная с первого элемента, т.к. нулевой учтён при инициализации переменных min и count
        for (int i = 1; i < a.length; i++) {

            //Если нашли новый минимальный элемент, устанавливаем на счётчике значение 1
            if (a[i] < min) {
                min = a[i];
                count = 1;
            }

            //Если нашли еще один минимальный элемент , увеличиваем значение счётчика на 1
            else if (a[i] == min) {
                count++;
            }
        }

        System.out.println("Минимальным элементом является "+min);
//Создаем новый массив уменьшенного размера
        int[] b = new int[a.length - count];

        //Наполняем массив b элементами массива a, кроме тех, которые равны минимальному элементу
        for (int i = 0, j = 0; j < b.length; i++) {
            if (a[i] > min) {
                b[j] = a[i];

                //Итератор j двигается по массиву b только если элемент не равен минимальному, в таком случае он его пропускает
                j++;
            }
        }
        return b;
    }
}
